  //BFS 
class Solution {
public:
    int maxDepth(TreeNode* root) {
      if(!root) return 0;
      
      int count = 0;
      queue<TreeNode*> q;
      q.push(root);
      while(!q.empty())
      {
        int size = q.size();
        vector<int> level;
        count++;
        for(int i=0;i<size;i++)
        {
          TreeNode* temp = q.front();
          q.pop();
          
          if(temp->left != NULL) q.push(temp->left);
          if(temp->right != NULL) q.push(temp->right);
        }
      }
      return count;
    }
};

//Recursion solution

class Solution {
public:
    int maxDepth(TreeNode* root) {
      if(!root) return 0;
      
      int left = maxDepth(root->left);
      int right = maxDepth(root->right);
      
      return max(left , right) + 1;
    }
};
