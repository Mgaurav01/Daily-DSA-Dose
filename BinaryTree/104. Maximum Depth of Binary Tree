  //BFS
  class Solution {
  public:
      int maxDepth(TreeNode* root) {
        if(root == NULL) return NULL;
        queue<TreeNode*>q;
        q.push(root);
        int depth = 0;
        while(!q.empty()){
          int size = q.size();
          depth++;
          for(int i=0;i<size;i++){
            TreeNode* cur = q.front();
            q.pop();

            if(cur->left != NULL) q.push(cur->left);
            if(cur->right != NULL) q.push(cur->right);
          }
        }
        return depth;
      }
  };
//Recursion solution

class Solution {
public:
    int maxDepth(TreeNode* root) {
      if(!root) return 0;

      int left = maxDepth(root->left);
      int right = maxDepth(root->right);

      return max(left , right) + 1;
    }
};
